plugins {
    id 'java'
    id 'java-library'
}

group 'com.acroteq.kafka-connect'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = "1.5.3.Final"
    lombokVersion = "1.18.24"
    lombokMapstructBindingVersion = "0.2.0"
    slf4jVersion = "2.0.6"
    kafkaVersion = "3.3.1"
    twitterApiV2Version = "2.0.3"
    googleGuavaVersion = "31.1-jre"
    log4jVersion = "2.19.0"

    junitVersion = "5.8.2"
    mockitoVersion = "4.11.0"
    hamcrestVersion = "1.3"
    awaitilityVersion = "4.2.0"
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

dependencies {
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation "org.slf4j:slf4j-simple:${slf4jVersion}"
    implementation "org.apache.kafka:connect-api:${kafkaVersion}"
    implementation "com.google.guava:guava:${googleGuavaVersion}"
    implementation "com.twitter:twitter-api-java-sdk:${twitterApiV2Version}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.mockito:mockito-inline:${mockitoVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testImplementation "org.hamcrest:hamcrest-all:${hamcrestVersion}"
    testImplementation "org.awaitility:awaitility:${awaitilityVersion}"
    testImplementation "org.slf4j:slf4j-simple:${slf4jVersion}"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

test {
    useJUnitPlatform()
}

tasks.register('copyRuntimeLibs', Copy) {
    from configurations.runtimeClasspath.findAll()
    into "${projectDir}/build/libs"
}

build {
    dependsOn copyRuntimeLibs
}